var old = require('./')

class A {
  foo () { return 5 }
}
console.log('wrapping A')
var A2 = old(A)

console.log(A2() instanceof A)
console.log(Object.getOwnPropertyNames(A.prototype))
console.log(Object.getOwnPropertyNames(A2.prototype))

class B extends old.unwrap(A2) {
  constructor () {
    super()
    this.b = !!this.bar
  }
  bar () { return 6 }
}
console.log(B)
console.log('wrapping B')
var B2 = old(B)
console.log(B.prototype.foo)
console.log(B.prototype.bar)
console.log(B.prototype.bar())

console.log(new B())
console.log(B2())
console.log(B2().foo())
console.log(B2().bar())

class C extends old.unwrap(B2) {
  baz () {}
}

console.log(new C(), new C().foo, new C().bar, new C().baz)
